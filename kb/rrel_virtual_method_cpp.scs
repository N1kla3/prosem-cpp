sc_node_role_relation -> rrel_virtual_method_cpp;;
sc_node_role_relation -> rrel_overriding;;
sc_node_norole_relation -> nrel_base_class;;
sc_node_norole_relation -> nrel_derieved_class;;


rrel_virtual_method_cpp

=> nrel_main_idtf:
		[c++ virtual method]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [с++ виртуальная функция]
	    (* <- lang_ru;; *);

<- arity : binary_relation;
=> nrel_second_domain : concept_function;
=> nrel_first_domain : concept_class;;

definition ->...
(*
	-> rrel_key_sc_element : rrel_virtual_method_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Виртуальная функция — это функция, которая определяется в базовом классе, а любой порожденный класс может ее переопределить.](*<-lang_ru;;*);;*);;
	=> nrel_main_idtf: [Определение (виртуальная функция)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_function;
		nrel_base_class;
		nrel_derieved_class;
		rrel_overriding
	};;
*);;

statement ->...
(*
	-> rrel_key_sc_element : rrel_virtual_method_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Определение того, какой экземпляр виртуальной функции вызывается по выражению вызова функции, зависит от класса объекта, адресуемого указателем или ссылкой](*<-lang_ru;;*);;*);;
	=> nrel_main_idtf: [Утверждение(виртуальная функция)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		rrel_virtual_method_cpp;
		nrel_call_function;
		concept_class;
		concept_pointer;
		concept_addres
	};;
*);;

