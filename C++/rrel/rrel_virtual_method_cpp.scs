sc_node_role_relation -> rrel_virtual_method_cpp;;
sc_node_role_relation -> rrel_overriding;;
sc_node_norole_relation -> nrel_base_class;;
sc_node_norole_relation -> nrel_derieved_class;;


rrel_virtual_method_cpp
<- c_plus_plus;
=> nrel_main_idtf:
		[virtual method]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [виртуальная функция]
	    (* <- lang_ru;; *);

<- arity : binary_relation;
=> nrel_second_domain : concept_function;
=> nrel_first_domain : concept_class;;

definition ->...
(*
	-> rrel_key_sc_element : rrel_virtual_method_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Виртуальная функция — это <b><sc_element sys_idtf="concept_function">функция</b>, которая определяется в <b><sc_element sys_idtf="nrel_base_class">базовом классе</b>, а любой <b><sc_element sys_idtf="nrel_derieved_class">порожденный класс</b> может ее <b><sc_element sys_idtf="rrel_overriding">переопределить</b>.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
	=> nrel_main_idtf: [Определение (виртуальная функция)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_function;
		nrel_base_class;
		nrel_derieved_class;
		rrel_overriding
	};;
*);;

statement ->...
(*
	-> rrel_key_sc_element : rrel_virtual_method_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Определение того, какой экземпляр виртуальной функции вызывается по выражению <b><sc_element sys_idtf="nrel_call_function">вызова функции</b>, зависит от <b><sc_element sys_idtf="concept_class">класса</b> объекта, адресуемого <b><sc_element sys_idtf="concept_pointer">указателем</b> или <b><sc_element sys_idtf="concept_reference">ссылкой</b>](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
	=> nrel_main_idtf: [Утверждение(виртуальная функция)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		rrel_virtual_method_cpp;
		nrel_call_function;
		concept_class;
		concept_pointer;
		concept_reference
	};;
*);;


