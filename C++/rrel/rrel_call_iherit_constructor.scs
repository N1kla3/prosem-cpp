sc_node_role_relation -> rrel_call_inherit_constructor;;

rrel_call_inherit_constructor

=> nrel_main_idtf:
		[c++ call base constructor]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [с++ вызов базового конструктора]
	    (* <- lang_ru;; *);

<- arity : binary_relation;
=> nrel_second_domain : concept_constructor;
=> nrel_first_domain : concept_constructor;;

definition ->...
(*
	-> rrel_key_sc_element : rrel_call_inherit_constructor;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Вызов конструктора - это вызов <b><sc_element sys_idtf="concept_constructor">конструктора</b> <b><sc_element sys_idtf="nrel_inherit">наследуемого класса</b> в своем конструкторе.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
	=> nrel_main_idtf: [Определение (вызов базового конструктора)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_constructor;
		nrel_inherit	
	};;
*);;

statement ->...
(*
	-> rrel_key_sc_element : rrel_call_inherit_constructor;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Если класс <b><sc_element sys_idtf="nrel_inherit">наследован</b> от нескольких <b><sc_element sys_idtf="concept_class">классов</b>, то может быть вызвано несколько родительских <b><sc_element sys_idtf="concept_constructor">конструкторов</b>.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
	=> nrel_main_idtf: [Утверждение(вызов базового конструктора)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_class;
		nrel_inherit;
		concept_constructor
	};;
*);;
