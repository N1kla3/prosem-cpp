sc_node_not_relation -> concept_template_class_cpp;;
sc_node_not_relation -> concept_class;;
sc_node_role_relation -> rrel_instantiation_cpp;;

concept_template_class_cpp

<= nrel_inclusion : concept_class;

=> nrel_main_idtf:
		[c++ class template]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [с++ шаблонный класс]
	    (* <- lang_ru;; *);;

definition ->...
(*
	-> rrel_key_sc_element : concept_template_class_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Шаблонный класс - обобщенное описание пользовательского типа, в котором могут быть 															параметризованы атрибуты и операции типа.](*<-lang_ru;;*);;*);;
	=> nrel_main_idtf: [Определение (шаблонный класс)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_class;
		rrel_template_argument_cpp
	};;
*);;

statement ->...
(*
	-> rrel_key_sc_element : concept_template_class_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Чтобы компилятор сгенерировал код, данный шаблон класса должен быть инстанцирован, для чего из шаблона должен быть создан конкретный класс с набором аргументов.](*<-lang_ru;;*);;*);;
	=> nrel_main_idtf: [Утверждение(шаблонный класс)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_class;
		rrel_instantiation_cpp;
		concept_template_class_cpp
	};;
*);;
