sc_node_not_relation -> concept_template_class_cpp;;
sc_node_not_relation -> concept_class;;
sc_node_role_relation -> rrel_instantiation_cpp;;

concept_template_class_cpp
<- c_plus_plus;
<= nrel_inclusion : concept_class;

=> nrel_main_idtf:
		[class template]
	    (* <- lang_en;; *);
	=> nrel_main_idtf:
	    [шаблонный класс]
	    (* <- lang_ru;; *);;

definition ->...
(*
	-> rrel_key_sc_element : concept_template_class_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Шаблонный <b><sc_element sys_idtf="concept_class">класс</b> - обобщенное описание пользовательского типа, в котором могут быть 															<b><sc_element sys_idtf="rrel_template_argument_cpp">параметризованы атрибуты</b> и операции типа.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
	=> nrel_main_idtf: [Определение (шаблонный класс)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_class;
		rrel_template_argument_cpp
	};;
*);;

statement ->...
(*
	-> rrel_key_sc_element : concept_template_class_cpp;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[Чтобы компилятор сгенерировал код, данный <b><sc_element sys_idtf="concept_template_class_cpp">шаблон класса</b> должен быть <b><sc_element sys_idtf="rrel_istantiation_cpp">инстанцирован</b>, для чего из шаблона должен быть создан конкретный <b><sc_element sys_idtf="concept_class">класс</b> с набором аргументов.](*<-lang_ru;;=> nrel_format: format_html;;*);;*);;
	=> nrel_main_idtf: [Утверждение(шаблонный класс)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		concept_class;
		rrel_instantiation_cpp;
		concept_template_class_cpp
	};;
*);;
